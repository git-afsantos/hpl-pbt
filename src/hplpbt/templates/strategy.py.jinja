{# SPDX-License-Identifier: MIT #}
{# Copyright © 2023 André Santos #}

{##############################################################################}
{# RENDERING MACROS #}
{##############################################################################}


{# strategy: MessageStrategy #}
{% macro msg_strategy(strategy) -%}
@composite
def {{ strategy.name }}(draw) -> {{ strategy.return_type }}:
{% for statement in strategy.body[:-1] %}
{{ _statement(statement)|indent(4, first=true) }}
{% endfor %}
{% set statement = strategy.body[-1] %}
{% if statement.is_assignment and statement.variable == strategy.return_variable %}
    return {{ statement.expression }}
{% else %}
{{ _statement(statement)|indent(4, first=true) }}
    return {{ strategy.return_variable }}
{% endif %}
{% endmacro %}


{# strategy: MessageStrategy #}
{% macro trace_strategy(strategy) -%}
{% set return_type = 'RT' ~ strategy.name %}
{{ return_type }} = {{ strategy.get_return_type() }}


@composite
def gen_{{ strategy.name }}() -> List[{{ return_type }}]:
    # HPL property:
    # {{ strategy.hpl_property }}
{% for segment in strategy.segments %}
    pass  # segment {{ loop.index }}
{% endfor %}
    return []
{% endmacro %}


{##############################################################################}
{# HELPER MACROS #}
{##############################################################################}


{# statement: Statement #}
{% macro _statement(statement) -%}
{{ statement }}
{%- endmacro %}
